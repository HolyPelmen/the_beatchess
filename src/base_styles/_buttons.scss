.button {
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  padding: to-rem(8px);

  //* ----- Types -----------------------------------------------
  &.primary {
    border: unset;
    &.light {
      background-color: map-get($map: $main, $key: "100");
      color: map-get($map: $primary, $key: "light");

      &:hover {
        background-color: map-get($map: $main, $key: "0");
      }

      &:active {
        background-color: map-get($map: $main, $key: "400");
        color: map-get($map: $primary, $key: "dark");
        & .button__icon {
          fill: map-get($map: $primary, $key: "dark");
          stroke: map-get($map: $primary, $key: "dark");
        }
      }
    }

    &.dark {
      background-color: map-get($map: $main, $key: "300");
      color: map-get($map: $primary, $key: "dark");
      & .button__icon {
        fill: map-get($map: $primary, $key: "dark");
        stroke: map-get($map: $primary, $key: "dark");
      }

      &:hover {
        background-color: map-get($map: $main, $key: "100");
        color: map-get($map: $primary, $key: "light");
        & .button__icon {
          fill: map-get($map: $primary, $key: "light");
          stroke: map-get($map: $primary, $key: "light");
        }
      }

      &:active {
        background-color: map-get($map: $main, $key: "400");
        color: map-get($map: $primary, $key: "dark");
        & .button__icon {
          fill: map-get($map: $primary, $key: "dark");
          stroke: map-get($map: $primary, $key: "dark");
        }
      }
    }
  }

  &.secondary {
    background-color: transparent;
    border-style: solid;

    @each $style in $styles {
      &.#{$style} {
        border-color: map-get($map: $add, $key: "100");
        color: map-get($map: $primary, $key: $style);

        & .button__icon {
          fill: map-get($map: $primary, $key: $style);
          stroke: map-get($map: $primary, $key: $style);
        }

        &:hover {
          @if ($style == "light") {
            border-color: map-get($map: $add, $key: "200");
          } @else if ($style == "dark") {
            border-color: map-get($map: $add, $key: "0");
          }
        }

        &:active {
          border-color: map-get($map: $add, $key: "400");
        }
      }
    }
  }

  &.tertiary {
    border: unset;
    background-color: transparent;

    &.light {
      color: map-get($map: $primary, $key: "light");

      &:hover {
        background-color: map-get($map: $neutral_light, $key: "light_gray");
      }
      &:active {
        background-color: map-get($map: $neutral_light, $key: "dark_gray");
        color: map-get($map: $primary, $key: "dark");

        & .button__icon {
          fill: map-get($map: $primary, $key: "dark");
          stroke: map-get($map: $primary, $key: "dark");
        }
      }
    }

    &.dark {
      color: map-get($map: $primary, $key: "dark");

      &:hover {
        background-color: map-get($map: $neutral_dark, $key: "light_gray");
      }
      &:active {
        background-color: map-get($map: $neutral_dark, $key: "dark_gray");
      }
    }
  }

  &.ghost {
    border: unset;
    background-color: transparent;

    &.light {
      color: map-get($map: $primary, $key: "light");

      &:hover {
        color: map-get($map: $add, $key: "300");

        & .button__icon {
          fill: map-get($map: $add, $key: "300");
          stroke: map-get($map: $add, $key: "300");
        }
      }
      &:active {
        color: map-get($map: $add, $key: "400");

        & .button__icon {
          fill: map-get($map: $add, $key: "400");
          stroke: map-get($map: $add, $key: "400");
        }
      }
    }

    &.dark {
      color: map-get($map: $primary, $key: "dark");

      &:hover {
        color: map-get($map: $add, $key: "200");

        & .button__icon {
          fill: map-get($map: $add, $key: "200");
          stroke: map-get($map: $add, $key: "200");
        }
      }

      &:active {
        color: map-get($map: $add, $key: "0");
        & .button__icon {
          fill: map-get($map: $add, $key: "0");
          stroke: map-get($map: $add, $key: "0");
        }
      }
    }
  }

  //* ----- Sizes -----------------------------------------------
  &.large {
    border-radius: to-rem(8px);
    column-gap: to-rem(12px);

    & > .button__label {
      @include heading-4;
    }
    & .button__icon {
      width: to-rem(24px);
      height: to-rem(24px);
    }
    &.secondary {
      border-width: 4px;
    }
  }

  &.medium {
    border-radius: to-rem(6px);
    column-gap: to-rem(8px);

    & > .button__label {
      @include heading-5("regular");
    }
    & .button__icon {
      width: to-rem(16px);
      height: to-rem(16px);
    }
    &.secondary {
      border-width: 2px;
    }
  }

  &.small {
    border-radius: to-rem(4px);
    column-gap: to-rem(8px);

    & > .button__label {
      @include heading-6("regular");
    }
    & .button__icon {
      width: to-rem(12px);
      height: to-rem(12px);
    }
    &.secondary {
      border-width: 1px;
    }
  }
}
